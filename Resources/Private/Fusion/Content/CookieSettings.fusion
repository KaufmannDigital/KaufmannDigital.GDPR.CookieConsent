// The actual cookie banner
prototype(KaufmannDigital.GDPR.CookieConsent:Content.CookieSettings) < prototype(Neos.Neos:ContentComponent) {
    editableHeadline = Neos.Neos:Editable {
        property = 'headline'
    }

    editableMainDescription = Neos.Neos:Editable {
        property = 'mainDescription'
    }

    editableIndividualSettingsDescription = Neos.Neos:Editable {
        property = 'individualSettingsDescription'
    }

    individualSettings = Neos.Neos:ContentCollection {
        nodePath = 'settingElements'
        @cache.mode = 'embed'
    }

    closeButtonEnabled = ${q(node).property('closeButtonEnabled')}

    labels = Neos.Fusion:DataStructure {
        acceptAll = ${q(node).property('acceptAllButtonLabel')}
        save = ${q(node).property('saveButtonLabel')}
        acceptNecessaryCookies = ${q(node).property('acceptNecessaryCookiesLabel')}
        openIndividualSettings = ${q(node).property('openIndividualSettingsLabel')}
        closeIndividualSettings = ${q(node).property('closeIndividualSettingsLabel')}
    }

    colors = Neos.Fusion:Join {
        buttonText = Neos.Fusion:Case {
            black {
                condition = ${q(node).property('buttonTextColor') == 'black'}
                renderer = '--cookieconsent-buttontext-color: rgb(0 0 0);'
            }
            white {
                condition = true
                renderer = '--cookieconsent-buttontext-color: rgb(255 255 255);'
            }
        }
        background = ${q(node).property('backgroundColor')}
        background.@process.toVar = ${value && !String.isBlank(value) && '--cookieconsent-bg:'+value+';'}
        theme = ${q(node).property('themeColor')}
        theme.@process.toVar = ${value && !String.isBlank(value) && '--cookieconsent-theme-color:'+value+';'}
    }

    renderer = afx`
        <div>
            <KaufmannDigital.GDPR.CookieConsent:Helper.JavaScriptSettings />

            <div
                class="gdpr-cookieconsent-container"
                style={props.colors}
                style.@if.set={props.colors}
            >
                <div class="gdpr-cookieconsent-settings">
                    <div class="gdpr-cookieconsent-settings__content">
                        <div class="gdpr-cookieconsent-settings__content__info">
                            <h2>{props.editableHeadline}</h2>
                            <div class="gdpr-cookieconsent-settings__content__info__description gdpr-cookieconsent-settings__content__info__description--main">
                                {props.editableMainDescription}
                            </div>
                            <div class="gdpr-cookieconsent-settings__content__info__description gdpr-cookieconsent-settings__content__info__description--settings hidden">
                                {props.editableIndividualSettingsDescription}
                            </div>
                        </div>

                        <div class="gdpr-cookieconsent-settings__content__cta">
                            <KaufmannDigital.GDPR.CookieConsent:Component.Molecule.CTAs
                                    acceptAllLabel={props.labels.acceptAll}
                                    saveLabel={props.labels.save}
                                    acceptNecessaryLabel={props.labels.acceptNecessaryCookies}
                                    openIndividualSettingsLabel={props.labels.openIndividualSettings}
                                    closeIndividualSettingsLabel={props.labels.closeIndividualSettings}
                            />
                        </div>


                        <div class="gdpr-cookieconsent-settings__content__settings hidden">
                            {props.individualSettings}
                        </div>

                        <KaufmannDigital.GDPR.CookieConsent:Component.Molecule.FooterLinks settingsNode={node}/>
                    </div>

                    <div class="gdpr-cookieconsent-settings__close">
                        <KaufmannDigital.GDPR.CookieConsent:Component.Atom.CloseButton
                                @if.condition={props.closeButtonEnabled}/>
                    </div>
                </div>
            </div>

            <KaufmannDigital.GDPR.CookieConsent:Helper.GeneratedStyles/>
            <KaufmannDigital.GDPR.CookieConsent:Helper.GeneratedJavaScript/>
        </div>
    `

    @cache {
        #TODO: Check, if needed. Since we are doing the individual settings in JS now, we could cache it.
        mode = 'uncached'

        context {
            1 = 'node'
            2 = 'documentNode'
            3 = 'site'
            4 = 'cookieValue'
        }
    }
}
