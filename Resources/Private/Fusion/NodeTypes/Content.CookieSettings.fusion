prototype(KaufmannDigital.GDPR.CookieConsent:Content.CookieSettings) < prototype(Neos.Neos:ContentComponent) {

    editableHeadline = Neos.Neos:Editable {
        property = 'headline'
    }

    editableMainDescription = Neos.Neos:Editable {
        property = 'mainDescription'
    }

    editableIndividualSettingsDescription = Neos.Neos:Editable {
        property = 'individualSettingsDescription'
    }

    individualSettings = Neos.Neos:ContentCollection {
        nodePath = 'settingElements'
        @cache.mode = 'embed'
    }

    imprintLink = ${q(node).property('imprintLink')}
    imprintLink.@process.convertUris = Neos.Neos:ConvertUris {
        absolute = true
    }
    dataProtectionPolicyLink = ${q(node).property('dataProtectionPolicyLink')}
    dataProtectionPolicyLink.@process.convertUris = Neos.Neos:ConvertUris {
        absolute = true
    }

    hasNecessaryGroup = ${q(node).find('[instanceof KaufmannDigital.GDPR.CookieConsent:Content.NecessarySettingGroup]').count() > 0}

    labels = Neos.Fusion:RawArray {
        acceptAll = ${q(node).property('acceptAllButtonLabel')}
        save = ${q(node).property('saveButtonLabel')}
        saveButtonLabel = ${q(node).property('saveButtonLabel')}
        acceptNecessaryCookiesLabel = ${q(node).property('acceptNecessaryCookiesLabel')}
        imprintLabel= ${q(node).property('imprintLabel')}
        dataProtectionPolicyLabel = ${q(node).property('dataProtectionPolicyLabel')}
        openIndividualSettingsLabel = ${q(node).property('openIndividualSettingsLabel')}
        closeIndividualSettingsLabel = ${q(node).property('closeIndividualSettingsLabel')}
    }


    @context.cookieValue = ${request.httpRequest.cookieParams.KD_GDPR_CC ? request.httpRequest.cookieParams.KD_GDPR_CC : ''}
    @if.cookieNotSet = ${!cookieValue || q(node).property('versionDate').timestamp >= Date.create(Json.parse(cookieValue).consentDate).timestamp || documentNode.nodeType.name == 'KaufmannDigital.GDPR.CookieConsent:Document.CookieSettingsPage'}
    @if.nodeIsSet = ${node && (node.context.inBackend == false || documentNode.nodeType.name == 'KaufmannDigital.GDPR.CookieConsent:Document.CookieSettingsPage')}

    renderer = KaufmannDigital.GDPR.CookieConsent:Content.CookieSettings.Renderer

    @cache {
        mode = 'uncached'

        context {
            1 = 'node'
            2 = 'documentNode'
            3 = 'site'
            4 = 'cookieValue'
        }
    }

}
